import std.core as core

run_array_tests :: () {
    a := array()
    push(a, 1)
    push(a, 2)
    core::assert(len(a) == 2, "len after pushes")
    core::assert(get(a, 0) == 1, "get 0")
    a[1] += 3
    core::assert(get(a, 1) == 5, "index += writes back")

    b := array_with(3, 7)
    core::assert(len(b) == 3, "array_with len")
    core::assert(get(b, 2) == 7, "prefill value")
    set(b, 1, 9)
    core::assert(get(b, 1) == 9, "set writes")
    _ := pop(b)
    core::assert(len(b) == 2, "pop reduces len")
}

run_string_tests :: () {
    s := "a,b,c"
    parts := split(s, ",")
    core::assert(len(parts) == 3, "split len")
    core::assert(get(parts, 1) == "b", "split content")

    n := parse_int(" 42 ")
    core::assert(n == 42, "parse_int")

    t := trim("  hi \n")
    core::assert(t == "hi", "trim")
}

main :: () {
    print("---BuiltIns---")
    core::help_builtins()
    print("---Tests---")
    run_array_tests()
    run_string_tests()
    print("tests ok")
}


