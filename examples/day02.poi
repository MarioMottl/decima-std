EXAMPLE_INPUT :: "7 6 4 2 1
                  1 2 7 8 9
                  9 7 6 2 1
                  1 3 2 4 5
                  8 6 4 4 1
                  1 3 6 7 9"

parse_line_to_ints :: (line: string) -> array {
    parts := split(trim(line), " ")
    nums := array()
    for (i: int = 0; i < len(parts); i += 1) {
        t := trim(parts[i])
        if (len(t) > 0) {
            push(nums, parse_int(t))
        }
    }
    return nums
}

is_safe :: (levels: array) -> bool {
    n := len(levels)
    if (n <= 1) { return true }

    dir: int = 0
    idx: int = 0
    while (idx < n - 1 && dir == 0) {
        d := levels[idx+1] - levels[idx]
        if (d > 0) { dir = 1 }
        else if (d < 0) { dir = -1 }
        else { return false }
        idx = idx + 1
    }

    for (i: int = 0; i < n - 1; i += 1) {
        d := levels[i+1] - levels[i]
        if (d == 0) { return false }
        if (dir == 1) {
            if (d < 1 || d > 3) { return false }
        } else {
            if (d > -1 || d < -3) { return false }
        }
    }
    return true
}

is_safe_with_dampener :: (levels: array) -> bool {
    if (is_safe(levels)) { return true }
    n := len(levels)
    for (skip: int = 0; skip < n; skip += 1) {
        cand := array()
        for (i: int = 0; i < n; i += 1) {
            if (i != skip) {
                push(cand, levels[i])
            }
        }
        if (is_safe(cand)) { return true }
    }
    return false
}

main :: () {
    ls := lines(EXAMPLE_INPUT)

    safe_count: int = 0
    safe_damp_count: int = 0

    for (i: int = 0; i < len(ls); i += 1) {
        line := trim(ls[i])
        if (len(line) > 0) {
            levels := parse_line_to_ints(line)
            if (is_safe(levels)) {
                safe_count = safe_count + 1
            }
            if (is_safe_with_dampener(levels)) {
                safe_damp_count = safe_damp_count + 1
            }
        }
    }

    print("Part1: ")
    print(safe_count)
    print("---------")

    print("Part2: ")
    print(safe_damp_count)
    print("---------")
}

