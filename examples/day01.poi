EXAMPLE_INPUT :: "3   4
                  4   3
                  2   5
                  1   3
                  3   9
                  3   3"

bubble_sort :: (arr: array) {
    n := len(arr)
    for (i: int = 0; i < n; i += 1) {
        for (j: int = 0; j < n - i - 1; j += 1) {
            if (arr[j] > arr[j+1]) {
                tmp := arr[j]
                arr[j] = arr[j+1]
                arr[j+1] = tmp
            }
        }
    }
}

main :: () {
    ls := lines(EXAMPLE_INPUT)
    left := array()
    right := array()
    for (i: int = 0; i < len(ls); i += 1) {
        line := trim(ls[i])
        parts := split(line, "   ")
        if (len(parts) < 2) { continue }
        a := parse_int(trim(parts[0]))
        b := parse_int(trim(parts[1]))
        push(left, a)
        push(right, b)
    }
    bubble_sort(left)
    bubble_sort(right)

    // Part1: sum of absolute differences.
    sum_diff: int = 0
    for (j: int = 0; j < len(left); j += 1) {
        diff := left[j] - right[j]
        if (diff < 0) { diff = -diff }
        sum_diff = sum_diff + diff
    }
    print("Part1: ")
    print(sum_diff)
    print("---------")

    // Part2: similarity score.
    similarity: int = 0
    for (k: int = 0; k < len(left); k += 1) {
        val := left[k] 
        count: int = 0
        for (l: int = 0; l < len(right); l += 1) {
            if (right[l] == val) {
                count = count + 1
            }
        }
        similarity = similarity + (val * count)
    }
    print("Part2: ")
    print(similarity)
}
